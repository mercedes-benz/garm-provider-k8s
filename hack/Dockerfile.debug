# SPDX-License-Identifier: MIT

FROM golang:1.21.5-alpine AS build

ARG garm_repo=https://github.com/cloudbase/garm
ARG garm_repo_ref=main

USER root

# install dlv
RUN apk add --no-cache git gcc g++ && \
  go install github.com/go-delve/delve/cmd/dlv@latest

# build garm binary
RUN git clone $garm_repo garm_repo && \
  cd garm_repo && \
  git checkout $garm_repo_ref && \
  CGO_ENABLED=1 GOOS=linux GOARCH=${ARCH} go install -gcflags="all=-N -l" -ldflags "-linkmode external -extldflags '-static' -X main.Version=$garm_repo_ref" ./cmd/garm

FROM alpine:3.18
ARG ARCH="amd64"

RUN addgroup -S mb && \
  adduser -u 1001 -S mb -G mb

WORKDIR /home/mb/bin/garm


# Copy dlv binary
COPY --from=build --chown=1001:mb /go/bin/dlv ./dlv
COPY --from=build --chown=1001:mb /go/bin/garm ./garm
COPY --from=build --chown=1001:mb /go/bin/garm-cli ./garm-cli

COPY --chown=1001:mb ./config/config.toml .
COPY --chown=1001:mb ./config/kubeconfig .
COPY --chown=1001:mb ./config/garm-provider-k8s-config.yaml .

COPY --chown=1001:mb ./bin/garm-provider-k8s .
COPY --chown=1001:mb ./scripts/entrypoint.sh .

RUN chmod +x ./entrypoint.sh && \
  chmod +x ./garm && \
  chmod +x ./garm-cli && \
  chmod +x ./garm-provider-k8s && \
  chmod +x /home/mb/bin/garm/dlv

RUN chown 1001:mb /home/mb/bin/garm && \
  chmod u+w /home/mb/bin/garm

USER 1001

EXPOSE 9997 40000

ENV DEBUG=true
ENTRYPOINT ["/home/mb/bin/garm/entrypoint.sh"]
